{"mappings":"qhBAAC,IAAAA,EAAAC,EAAA,SA6CD,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,EAAAP,GAASQ,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAE9DG,EAAAP,GAASQ,OAAOE,QAAQ,sBAAoBP,QAAeC,M,CAhDhDO,SAASC,cAAgB,SAU/BC,iBAAiB,UAW1B,SAAiBC,GACf,IAAIC,EAAY,EACZC,EAAQC,OAAOH,EAAMI,cAAcd,MAAMe,OAE9CH,EAAiD,EAAxCC,OAAOH,EAAMI,cAAcd,MAAMe,OACzCL,EAAMM,iBAIN,KAAOL,EAAYD,EAAMI,cAAcG,OAAOF,OAC5CJ,IACEO,QAAQC,IAAI,UAAWP,GACzBM,QAAQC,IAAIR,GACZb,EAAca,EAAWC,GACzBA,GAAUC,OAAOH,EAAMI,cAAcM,KAAKL,M","sources":["src/js/03-promises.js"],"sourcesContent":[" import Notiflix from 'notiflix';\n\nconst refForm= document.querySelector  (\".form\");\n// const refDelay= document.getElementById('delay');\n// const refBtn= document.querySelector('button');\n// const refStep = document.querySelector('[name=\"step\"]');\n// const refAmount = document.querySelector('[name=\"amount\"]');\n// console.log (refForm);\n// console.log (\"nn\", refDelay );\n// console.log (\"bt\", refBtn);\n\n\n refForm.addEventListener('submit', onStart);\n//  refAmount.addEventListener('change', onAmount);\n// refDelay.addEventListener('change', onDelay);\n// refStep.addEventListener('change',onStep);\n\n// function onDelay ()  { console.log(\"del\",refDelay.value); return refDelay.value;};\n// function onAmount ()  { console.log(\"am\",refAmount.value);};\n// function onStep ()  { \n//   console.log(\"step\",refStep.value);\n// };\n\nfunction onStart(event) {\n  let iPosition = 0;\n  let iDelay =Number(event.currentTarget.delay.value);\n  \n iDelay = Number(event.currentTarget.delay.value)*1;\n  event.preventDefault();\n  // console.log('11111111111', event.currentTarget.amount.value, i);\n  // console.log(\"st\",iDelay);\n  // console.log(\"stelements\",onDelay());\n  while (iPosition < event.currentTarget.amount.value) {\n    iPosition++;\n      console.log(\"del-??/\", iDelay);\n    console.log(iPosition);\n    createPromise(iPosition, iDelay);\n    iDelay += Number(event.currentTarget.step.value);\n  \n    \n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","event","iPosition","iDelay","Number","currentTarget","value","preventDefault","amount","console","log","step"],"version":3,"file":"03-promises.5395b4c2.js.map"}